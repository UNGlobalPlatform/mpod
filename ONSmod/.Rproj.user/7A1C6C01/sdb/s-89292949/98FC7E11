{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(shinydashboard)\nlibrary(fmsb)\n\n# Define server logic for slider examples\nshinyServer(function(input, output) {\n  \n  # Reactive expression to compose a data frame containing all of the values\n  #sliderValues <- reactive({\n  output$radarPlot <- renderPlot({\n    \n  # Data must be given as the data frame, where the first cases show maximum.\n  # This section is create the data frame with the min/max numbers for each row\n    maxmin <- data.frame(\n      sensitivity=c(12, 0),\n      indentifies=c(12, 0),\n      granularity=c(12, 0),\n      recency=c(12, 0),\n      reliability=c(12, 0),\n      release=c(12, 0),\n      audience=c(12, 0)\n    )\n    \n    # This populates dat with random numbers for the actual value\n    dat <- data.frame(\n      sensitivity=as.integer( c(input$sensitivity)),\n      indentifies=as.integer( c(input$indentifies)),\n      granularity=as.integer( c(input$granularity)),\n      recency=as.integer( c(input$recency)),\n      reliability=as.integer( c(input$reliability)),\n      release=as.integer( c(input$release)),\n      audience=as.integer( c(input$audience))\n    )\n  \n  # Merges actual data with min/max data\n    dat <- rbind(maxmin,dat)\n    \n    #op <- par(mar=c(1, 2, 2, 1),mfrow=c(2, 2))\n  \n    radarchart(dat, axistype=0, seg=3, plty=1, pfcol=rgb(0.2,0.5,0.5,0.5), vlabels=c(\"Sensitivity\", \"Indentifies\",\n                                                         \"Granularity\", \"Recency\", \"Reliability\", \"Release\", \"Audience\"),\n               title=\"ONS MPoD Radar v1.1\", vlcex=1.4)\n    \n    #par(op)\n  \n  # Show the values using an HTML table\n  #output$values <- renderTable({\n  #  sliderValues()\n  #})\n  })\n\n\n  observeEvent(input$showsensitivity, {\n    showModal(modalDialog(\n      title = \"Sensitivity\",\n      \"This could be where we will explain in detail what is meant by Sensitivity and the catagories of Open Public, Commercial, Private Personal and Secret\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })\n  observeEvent(input$showindentifies, {\n    showModal(modalDialog(\n      title = \"Indentifies\",\n      \"This could be where we will explain in detail what is meant by Indentifies and the catagories of Non-Personal, Groups and Individuals\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })\n  observeEvent(input$showgranularity, {\n    showModal(modalDialog(\n      title = \"Granularity\",\n      \"This could be where we will explain in detail what is meant by Granularity and the catagories of Population, Sample, Record and Field Variable\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })    \n  observeEvent(input$showrecency, {\n    showModal(modalDialog(\n      title = \"Recency\",\n      \"This could be where we will explain in detail what is meant by Recency and the catagories of Historical, Periodic and Real-time\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })    \n  observeEvent(input$showreliability, {\n    showModal(modalDialog(\n      title = \"Reliability\",\n      \"This could be where we will explain in detail what is meant by Reliability and the catagories of Incomplete, Patchy, Substantial and Complete\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })    \n  observeEvent(input$showrelease, {\n    showModal(modalDialog(\n      title = \"Release\",\n      \"This could be where we will explain in detail what is meant by Sensitivity and the catagories of Closed, Restricted and Open\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })    \n  observeEvent(input$showaudience, {\n    showModal(modalDialog(\n      title = \"Audience\",\n      \"This could be where we will explain in detail what is meant by Audience and the catagories of Closed Group, Third Parties by type and Public\",\n      easyClose = TRUE,\n      footer = NULL\n    ))\n  })\n\n})",
    "created" : 1496971308740.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2522149666",
    "id" : "98FC7E11",
    "lastKnownWriteTime" : 1497003171,
    "last_content_update" : 1497003171308,
    "path" : "C:/Tools/R/ONSmod/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}